{"version":3,"file":"component---src-pages-stats-tsx-03a517702fbdb233622c.js","mappings":"8j0CAKA,IA4DA,EA5Dc,WACZ,OAAkCA,EAAAA,EAAAA,UAAc,IAAzCC,EAAP,KAAkBC,EAAlB,KAEMC,EAAQ,mCAAG,yGACKC,EAAAA,EAAAA,KADL,OAGf,IAFMC,EADS,OAEXC,EAAiB,GACZC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IACN,OAAtBF,EAAME,GAAGE,WACXH,EAAUD,EAAME,GAAGE,UAAaH,EAAUD,EAAME,GAAGE,UAAYH,EAAUD,EAAME,GAAGE,UAAY,EAAI,GAKtGH,EAAYI,OAAOC,QAAQL,GAAWM,MAAK,kBAAGC,EAAH,iBAAiBA,KAAGC,QAAO,SAACC,EAAD,SAAKC,EAAL,KAAQC,EAAR,mBAAqBF,GAArB,WAAyBC,GAAIC,EAA7B,MAAmC,IAEzGf,EAAaI,GAZE,2CAAH,qDAmBd,OAJAY,EAAAA,EAAAA,YAAU,WACRf,MACC,IAGD,gBAAC,IAAD,CAAQgB,UAAU,SAChB,uBAAKC,UAAU,0BACb,sBAAIA,UAAU,2BAAd,mBACA,2BACE,sBAAIA,UAAU,+BAAd,uBACA,uBAAKA,UAAU,wEACZV,OAAOW,KAAKpB,GAAWqB,KAAI,SAACC,GAE3B,IAAMC,EAAcd,OAAOe,OAAOxB,GAAWa,QAAO,SAACU,EAAKE,GAAN,OAAgBF,EAAME,IAAO,GAC3EC,EAAQjB,OAAOW,KAAKpB,GAAW2B,QAAQL,GACvCM,EAAQnB,OAAOW,KAAKpB,GAAWO,OAAS,EAC9C,OACE,uBAAKsB,IAAKP,EAAMH,UAAS,UAAqB,IAAVO,EAAc,YAAc,IAAvC,KAA6CA,IAAUE,EAAQ,YAAc,IAAME,MAAO,CACjHC,MAAUC,KAAKC,MAAMjC,EAAUsB,GAAQC,EAAM,KAAxC,IAELW,gBAAiBC,EAAOb,GAAMc,aAKtC,uBAAKjB,UAAU,oBACZV,OAAOW,KAAKpB,GAAWqB,KAAI,SAACC,GAE3B,IAAMC,EAAcd,OAAOe,OAAOxB,GAAWa,QAAO,SAACU,EAAKE,GAAN,OAAgBF,EAAME,IAAO,GACjF,OAEE,uBAAKN,UAAU,wBAAuB,wBAAMW,MAAO,CAACM,MAAOD,EAAOb,GAAMc,QAAlC,KAAtC,IAA+F,wBAAMjB,UAAU,iBAAiBG,GAAhI,KAA+ItB,EAAUsB,GAAQC,EAAM,KAAKc,QAAQ,GAApL,SAIN,yBAAOlB,UAAU,oCAAjB","sources":["webpack://github-pages/./src/pages/stats.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getRepos } from \"../../utils/codeGallery\";\nimport Layout from \"../components/layout\";\nimport * as colors from \"../../utils/colors.json\";\n\nconst Stats = () => {\n  const [languages, setLanguages] = useState<any>({});\n  \n  const getStats = async () => {\n    const repos = await getRepos();\n    let histogram: any = {};\n    for (let i = 0; i < repos.length; i++) {\n      if (repos[i].language !== null) {\n        histogram[repos[i].language] = (histogram[repos[i].language] ? histogram[repos[i].language] + 1 : 1);\n      }\n    }\n\n    // @ts-expect-error\n    histogram = Object.entries(histogram).sort(([,a],[,b]) => b-a).reduce((r, [k, v]) => ({ ...r, [k]: v }), {});\n\n    setLanguages(histogram);\n  }\n\n  useEffect(() => {\n    getStats();\n  }, []);\n\n  return (\n    <Layout pageTitle=\"Stats\">\n      <div className=\"max-w-[1280px] mx-auto\">\n        <h1 className=\"text-6xl font-bold py-6\">My Github Stats</h1>\n        <div>\n          <h2 className=\"text-4xl font-semibold pb-6\">Most Used Languages</h2>\n          <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 flex flex-row\">\n            {Object.keys(languages).map((lang) => {\n              // @ts-expect-error\n              const sum: number = Object.values(languages).reduce((sum, next) => (sum + next), 0);\n              const count = Object.keys(languages).indexOf(lang);\n              const total = Object.keys(languages).length - 1;\n              return (\n                <div key={lang} className={`h-2.5 ${count === 0 ? \"rounded-l\" : \"\"} ${count === total ? \"rounded-r\" : \"\"}`} style={{\n                  width: `${Math.round(languages[lang] / sum * 100)}%`,\n                  // @ts-expect-error\n                  backgroundColor: colors[lang].color\n                }}></div>\n              );\n            })}\n          </div>\n          <div className=\"grid grid-cols-3\">\n            {Object.keys(languages).map((lang) => {\n              // @ts-expect-error\n              const sum: number = Object.values(languages).reduce((sum, next) => (sum + next), 0);\n              return (\n                // @ts-expect-error\n                <div className=\"w-[80%] mx-auto py-4\"><span style={{color: colors[lang].color}}>&#9679;</span> <span className=\"font-semibold\">{lang}</span> {(languages[lang] / sum * 100).toFixed(2)}%</div>\n              );\n            })}\n          </div>\n          <small className=\"text-gray-500 dark:text-gray-400\">Data from Github API based on most used language in each public repo</small>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Stats;\n"],"names":["useState","languages","setLanguages","getStats","getRepos","repos","histogram","i","length","language","Object","entries","sort","a","reduce","r","k","v","useEffect","pageTitle","className","keys","map","lang","sum","values","next","count","indexOf","total","key","style","width","Math","round","backgroundColor","colors","color","toFixed"],"sourceRoot":""}