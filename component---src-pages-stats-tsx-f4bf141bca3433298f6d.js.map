{"version":3,"file":"component---src-pages-stats-tsx-f4bf141bca3433298f6d.js","mappings":"8j0CAKA,IAmEA,EAnEc,WACZ,OAAkCA,EAAAA,EAAAA,UAAc,IAAzCC,EAAP,KAAkBC,EAAlB,KAEMC,EAAQ,mCAAG,+GACKC,EAAAA,EAAAA,MADL,OACTC,EADS,OAEXC,EAAiB,GACZC,EAAI,EAHE,YAGCA,EAAIF,EAAMG,QAHX,oBAIa,OAAtBH,EAAME,GAAGE,SAJA,kCAKaC,EAAAA,EAAAA,IAAiBL,EAAME,GAAGI,MALvC,OAOX,IAFMV,EALK,OAMLW,EAAgBC,OAAOC,KAAKb,GACzBM,EAAI,EAAGA,EAAIK,EAAcJ,OAAQD,IACxCD,EAAUM,EAAcL,IAAOD,EAAUM,EAAcL,IAAMD,EAAUM,EAAcL,IAAMN,EAAUW,EAAcL,IAAMN,EAAUW,EAAcL,IARxI,QAGmBA,IAHnB,uBAcfD,EAAYO,OAAOE,QAAQT,GAAWU,MAAK,kBAAGC,EAAH,iBAAiBA,KAAGC,QAAO,SAACC,EAAD,SAAKC,EAAL,KAAQC,EAAR,mBAAqBF,GAArB,WAAyBC,GAAIC,EAA7B,MAAmC,IAEzGnB,EAAaI,GAhBE,4CAAH,qDAuBd,OAJAgB,EAAAA,EAAAA,YAAU,WACRnB,MACC,IAGD,gBAAC,IAAD,CAAQoB,UAAU,SAChB,uBAAKC,UAAU,0BACb,sBAAIA,UAAU,2BAAd,mBACA,2BACE,uBAAKA,UAAU,gHACb,sBAAIA,UAAU,0BAAd,uBACA,sBAAIA,UAAU,8CACd,uBAAKA,UAAU,wEACZX,OAAOC,KAAKb,GAAWwB,KAAI,SAACC,GAE3B,IAAMC,EAAcd,OAAOe,OAAO3B,GAAWiB,QAAO,SAACS,EAAKE,GAAN,OAAgBF,EAAME,IAAO,GAC3EC,EAAQjB,OAAOC,KAAKb,GAAW8B,QAAQL,GACvCM,EAAQnB,OAAOC,KAAKb,GAAWO,OAAS,EAC9C,OACE,uBAAKyB,IAAKP,EAAMF,UAAS,UAAqB,IAAVM,EAAc,YAAc,IAAvC,KAA6CA,IAAUE,EAAQ,YAAc,IAAME,MAAO,CACjHC,MAAUlC,EAAUyB,GAAQC,EAAM,IAA7B,IAELS,gBAAiBC,EAAOX,GAAMY,aAKtC,uBAAKd,UAAU,oBACZX,OAAOC,KAAKb,GAAWwB,KAAI,SAACC,GAE3B,IAAMC,EAAcd,OAAOe,OAAO3B,GAAWiB,QAAO,SAACS,EAAKE,GAAN,OAAgBF,EAAME,IAAO,GACjF,OAEE,uBAAKI,IAAKP,EAAMF,UAAU,wBAAuB,wBAAMU,MAAO,CAACI,MAAOD,EAAOX,GAAMY,QAAlC,KAAjD,IAA0G,wBAAMd,UAAU,iBAAiBE,GAA3I,KAA0JzB,EAAUyB,GAAQC,EAAM,KAAKY,QAAQ,GAA/L,SAIN,yBAAOf,UAAU,oCAAjB","sources":["webpack://github-pages/./src/pages/stats.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getRepoLanguages, getRepos } from \"../../utils/codeGallery\";\nimport Layout from \"../components/layout\";\nimport * as colors from \"../../utils/colors.json\";\n\nconst Stats = () => {\n  const [languages, setLanguages] = useState<any>({});\n  \n  const getStats = async () => {\n    const repos = await getRepos();\n    let histogram: any = {};\n    for (let i = 0; i < repos.length; i++) {\n      if (repos[i].language !== null) {\n        const languages = await getRepoLanguages(repos[i].name);\n        const languageIndex = Object.keys(languages);\n        for (let i = 0; i < languageIndex.length; i++) {\n          histogram[languageIndex[i]] = (histogram[languageIndex[i]] ? histogram[languageIndex[i]] + languages[languageIndex[i]] : languages[languageIndex[i]]);\n        }\n      }\n    }\n\n    // @ts-expect-error\n    histogram = Object.entries(histogram).sort(([,a],[,b]) => b-a).reduce((r, [k, v]) => ({ ...r, [k]: v }), {});\n\n    setLanguages(histogram);\n  }\n\n  useEffect(() => {\n    getStats();\n  }, []);\n\n  return (\n    <Layout pageTitle=\"Stats\">\n      <div className=\"max-w-[1280px] mx-auto\">\n        <h1 className=\"text-6xl font-bold py-6\">My Github Stats</h1>\n        <div>\n          <div className=\"rounded-xl bg-gradient-to-r bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 p-2 sm:p-6\">\n            <h2 className=\"text-4xl font-semibold\">Most Used Languages</h2>\n            <hr className=\"my-6 border-gray-500 dark:border-gray-400\" />\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 flex flex-row\">\n              {Object.keys(languages).map((lang) => {\n                // @ts-expect-error\n                const sum: number = Object.values(languages).reduce((sum, next) => (sum + next), 0);\n                const count = Object.keys(languages).indexOf(lang);\n                const total = Object.keys(languages).length - 1;\n                return (\n                  <div key={lang} className={`h-2.5 ${count === 0 ? \"rounded-l\" : \"\"} ${count === total ? \"rounded-r\" : \"\"}`} style={{\n                    width: `${languages[lang] / sum * 100}%`,\n                    // @ts-expect-error\n                    backgroundColor: colors[lang].color\n                  }}></div>\n                );\n              })}\n            </div>\n            <div className=\"grid grid-cols-3\">\n              {Object.keys(languages).map((lang) => {\n                // @ts-expect-error\n                const sum: number = Object.values(languages).reduce((sum, next) => (sum + next), 0);\n                return (\n                  // @ts-expect-error\n                  <div key={lang} className=\"w-[80%] mx-auto py-4\"><span style={{color: colors[lang].color}}>&#9679;</span> <span className=\"font-semibold\">{lang}</span> {(languages[lang] / sum * 100).toFixed(2)}%</div>\n                );\n              })}\n            </div>\n            <small className=\"text-gray-500 dark:text-gray-400\">Data from Github API based on most used language in each public repo</small>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Stats;\n"],"names":["useState","languages","setLanguages","getStats","getRepos","repos","histogram","i","length","language","getRepoLanguages","name","languageIndex","Object","keys","entries","sort","a","reduce","r","k","v","useEffect","pageTitle","className","map","lang","sum","values","next","count","indexOf","total","key","style","width","backgroundColor","colors","color","toFixed"],"sourceRoot":""}