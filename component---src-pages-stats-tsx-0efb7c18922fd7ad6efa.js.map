{"version":3,"file":"component---src-pages-stats-tsx-0efb7c18922fd7ad6efa.js","mappings":"gKAqEA,UA5Cc,SAAH,GAAyB,IAAnBA,EAAI,EAAJA,KACTC,EAAYC,KAAKC,MAAMH,EAAKI,iBAAiBC,MAAM,GAAGC,WAE5D,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAU,SAChBF,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,0BACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,2BAA0B,mBACxCH,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,gHACbH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,0BAAyB,uBACvCH,EAAAA,cAAAA,KAAAA,CAAIG,UAAU,8CACdH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,wEACZC,OAAOC,KAAKX,GAAWY,KAAI,SAACC,GAE3B,IAAMC,EAAcJ,OAAOK,OAAOf,GAAWgB,QAAO,SAACF,EAAKG,GAAI,OAAMH,EAAMG,CAAI,GAAG,GAC3EC,EAAQR,OAAOC,KAAKX,GAAWmB,QAAQN,GACvCO,EAAQV,OAAOC,KAAKX,GAAWqB,OAAS,EAC9C,OACEf,EAAAA,cAAAA,MAAAA,CAAKgB,IAAKT,EAAMJ,UAAS,UAAqB,IAAVS,EAAc,YAAc,IAAE,KAAIA,IAAUE,EAAQ,YAAc,IAAMG,MAAO,CACjHC,MAAUxB,EAAUa,GAAQC,EAAM,IAAG,IAErCW,iBAAiBC,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAOb,GAAMc,QAGpC,KAEFrB,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,oBACZC,OAAOC,KAAKX,GAAWY,KAAI,SAACC,GAE3B,IAAMC,EAAcJ,OAAOK,OAAOf,GAAWgB,QAAO,SAACF,EAAKG,GAAI,OAAMH,EAAMG,CAAI,GAAG,GACjF,OAEEX,EAAAA,cAAAA,MAAAA,CAAKgB,IAAKT,EAAMJ,UAAU,wBAAuBH,EAAAA,cAAAA,OAAAA,CAAMiB,MAAO,CAACI,OAAOD,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAOb,GAAMc,QAAQ,KAAc,IAAC,wBAAMlB,UAAU,iBAAiBI,GAAY,KAAGb,EAAUa,GAAQC,EAAM,KAAKc,QAAQ,GAAG,IAEtM,KAEFtB,EAAAA,cAAAA,QAAAA,CAAOG,UAAU,oCAAmC,2CAMhE,C","sources":["webpack://github-pages/./src/pages/stats.tsx"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport * as colors from \"../../utils/colors.json\";\nimport { graphql } from \"gatsby\";\n\nexport const query = graphql`\n  query {\n    allLanguagesNode {\n      nodes {\n        histogram\n      }\n    }\n  }\n`;\n\ntype stats = {\n  data: {\n    allLanguagesNode: {\n      nodes: [{\n        histogram: string\n      }]\n    }\n  }\n}\n\nconst Stats = ({ data } : stats) => {\n  const languages = JSON.parse(data.allLanguagesNode.nodes[0].histogram);\n\n  return (\n    <Layout pageTitle=\"Stats\">\n      <div className=\"max-w-[1280px] mx-auto\">\n        <h1 className=\"text-6xl font-bold py-6\">My Github Stats</h1>\n        <div>\n          <div className=\"rounded-xl bg-gradient-to-r bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 p-2 sm:p-6\">\n            <h2 className=\"text-4xl font-semibold\">Most Used Languages</h2>\n            <hr className=\"my-6 border-gray-500 dark:border-gray-400\" />\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700 flex flex-row\">\n              {Object.keys(languages).map((lang) => {\n                // @ts-expect-error\n                const sum: number = Object.values(languages).reduce((sum, next) => (sum + next), 0);\n                const count = Object.keys(languages).indexOf(lang);\n                const total = Object.keys(languages).length - 1;\n                return (\n                  <div key={lang} className={`h-2.5 ${count === 0 ? \"rounded-l\" : \"\"} ${count === total ? \"rounded-r\" : \"\"}`} style={{\n                    width: `${languages[lang] / sum * 100}%`,\n                    // @ts-expect-error\n                    backgroundColor: colors[lang].color\n                  }}></div>\n                );\n              })}\n            </div>\n            <div className=\"grid grid-cols-3\">\n              {Object.keys(languages).map((lang) => {\n                // @ts-expect-error\n                const sum: number = Object.values(languages).reduce((sum, next) => (sum + next), 0);\n                return (\n                  // @ts-expect-error\n                  <div key={lang} className=\"w-[80%] mx-auto py-4\"><span style={{color: colors[lang].color}}>&#9679;</span> <span className=\"font-semibold\">{lang}</span> {(languages[lang] / sum * 100).toFixed(2)}%</div>\n                );\n              })}\n            </div>\n            <small className=\"text-gray-500 dark:text-gray-400\">Data from Github API in public repos</small>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Stats;\n"],"names":["data","languages","JSON","parse","allLanguagesNode","nodes","histogram","React","Layout","pageTitle","className","Object","keys","map","lang","sum","values","reduce","next","count","indexOf","total","length","key","style","width","backgroundColor","colors","color","toFixed"],"sourceRoot":""}